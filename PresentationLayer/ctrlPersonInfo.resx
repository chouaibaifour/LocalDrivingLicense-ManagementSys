<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="picProfilePhoto.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
  <data name="picProfilePhoto.InitialImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>