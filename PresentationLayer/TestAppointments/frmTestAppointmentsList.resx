<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="picTestType.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        AABJRU5ErkJggg==
</value>
  </data>
</root>